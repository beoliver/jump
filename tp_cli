#!/usr/bin/env python3
import argparse
import os
import re
import sys
from pathlib import Path


def alias_path():
    return Path(os.path.dirname(os.path.realpath(__file__))) / "aliases.csv"


def aliases():
    with open(alias_path(), "r+") as f:
        return dict(line.strip().split(",") for line in f)


def write_aliases(alias_dict):
    with open(alias_path(), "w+") as f:
        for name, path in sorted(alias_dict.items()):
            f.write("{},{}\n".format(name, path))


valid_tag_regex = re.compile("^[a-zA-Z0-9_][a-zA-Z0-9_-]*$")


def valid_tag(s):
    if valid_tag_regex.match(s):
        return True
    return False


parser = argparse.ArgumentParser("tp", description="TelePort around your filesystem")

parser.add_argument("name", nargs="?", type=str, metavar="ALIAS", help="The ALIAS")
parser.add_argument(
    "-a", type=str, metavar="DIR", help="DIR to associate with ALIAS",
)
parser.add_argument(
    "-s", action="store_true", help="Show DIR for ALIAS",
)
parser.add_argument(
    "-f", action="store_true", help="Use force",
)
parser.add_argument(
    "-D", action="store_true", help="Delete an ALIAS",
)

if __name__ == "__main__":

    existing_aliases = aliases()

    if len(sys.argv) < 2:
        if not existing_aliases:
            sys.exit()
        pad = max(len(x) for x in existing_aliases.keys())
        for k, v in existing_aliases.items():
            print("{}\t{}".format(k.ljust(pad), v))
        sys.exit()

    args = parser.parse_args()
    # print(args)

    name = args.name
    if not valid_tag(name):
        print("Not a valid tag: '{}'".format(name))
        sys.exit()

    if args.D:
        if name not in existing_aliases:
            sys.exit()
        del existing_aliases[name]
        write_aliases(existing_aliases)
        sys.exit()

    dir = args.a
    existing_mapping = existing_aliases.get(name)

    if args.s:
        if existing_mapping:
            print(existing_mapping)
        sys.exit(0)

    if not dir:
        if existing_mapping:
            print(existing_mapping)
        sys.exit(0)

    # we are adding
    abs_dir = Path(os.path.abspath(dir))
    if not abs_dir.is_dir():
        print("No such directory '{}'".format(abs_dir))
        sys.exit(1)

    if not args.f and existing_mapping:
        print("{} already exists - links to {}".format(name, existing_mapping))
        sys.exit(1)

    existing_aliases[name] = str(abs_dir)
    write_aliases(existing_aliases)

