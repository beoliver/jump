#!/usr/bin/env bash

bold=$(tput bold)
normal=$(tput sgr0)
underline=$(tput smul)
nounderline=$(tput rmul)

help_str="jump - around your filesystem

${bold}SYNOPSIS${normal}
    jump [NAME] [option]

    Calling jump with a single ${underline}NAME${nounderline} argument will be interpreted as an attempt to 
    change directory using the ${underline}PATH${nounderline} assocaited with the ${underline}NAME${nounderline}.

${bold}OPTIONS${normal}
    -h (--help)
        Display this help message and exit.
    -a (--alias) [${underline}PATH${nounderline}]
        Associate the ${underline}NAME${nounderline} with the ${underline}PATH${nounderline}. If no ${underline}PATH${nounderline} is provided then the path to 
        the current working directory will be used. If no ${underline}NAME${nounderline} is provided then the
        current working directory is used.
    -r (--rename) ${underline}NEW_NAME${nounderline}
        Rename the alias ${underline}NAME${nounderline} to ${underline}NEW_NAME${nounderline}.
    -l (--list)
        List all stored alias names.
    -L (--list-all)
        List all stored entires and their associated paths.        
    -d (--delete)
        Delete the NAME and any associated PATH.
    -g (--generated)
        Display the generated functions for your .bash_profile or .zshrc file.
"

_path_to_script="$(cd "$(dirname "$0")" || exit; pwd -P)/$(basename "$0")"
j_command_str="# The following function can be pasted into your shell profile.
# calling the 'j' command with a single alias name is equivalent to calling
# 'cd' on the path asociated with the alias.

j () {
  _jump_result=\"\$($_path_to_script \"\${@}\")\"
  if [ \"\${#}\" -eq 1 ]; then
    if case \${1} in -*) false;; *) true;; esac; then
      cd \"\$_jump_result\" && return
    fi
  fi
  echo \"\$_jump_result\"
}

_jump_completions() {
  COMPREPLY=()
  local word=\"\${COMP_WORDS[COMP_CWORD]}\"
  if [ \"\$COMP_CWORD\" -eq 1 ]; then
    COMPREPLY=(\$(compgen -W \"\$($_path_to_script --list-names)\" -- \"\$word\"))
  fi
}

complete -F _jump_completions j
"

# -----------------------------------------------------------------------------

function jump-options () {
  ALIAS_NAME=""
  if [[ $1 != "-"* ]]; then
    ALIAS_NAME=$1
    shift
  fi  
  case $1 in    
    -h | --help)
      echo "${help_str}"
      exit
      ;;
    -l | --list-names)
      sqlite3 -column "${SQLITE_DB}" "SELECT name FROM aliases;"
      exit
      ;;
    -L | --list-all)
      sqlite3 -column "${SQLITE_DB}" "SELECT * FROM aliases;"
      exit
      ;;
    -g | --generate)
      echo "$j_command_str"
      exit
      ;;      
    -d | --delete)
      sqlite3 -column "${SQLITE_DB}" "DELETE FROM aliases WHERE name='${ALIAS_NAME}';"
      exit
      ;;
    -r | --rename)
      if [[ -z "$ALIAS_NAME" ]]; then
        # display help string and exit
        echo "$help_str"
        exit
      fi
      NEW_ALIAS_NAME=$2
      if [[ -z "$NEW_ALIAS_NAME" ]]; then
        # display help string and exit
        echo "$help_str"
        exit
      fi
      sqlite3 -column "${SQLITE_DB}" "UPDATE aliases SET name='${NEW_ALIAS_NAME}' WHERE name='${ALIAS_NAME}';"
      exit
      ;;
    -a | --alias)
      if [[ -z "$ALIAS_NAME" ]]; then
        # display help string and exit
        ALIAS_NAME=$(basename "$(pwd)")
      fi
      if [[ -z $2 ]]; then
        ALIAS_DIR=$(pwd)
      else
        ALIAS_DIR=$2
      fi
      if [[ ! -d "$ALIAS_DIR" ]]; then
        # display help string and exit
        echo "$help_str"
        exit
      fi
      sqlite3 "${SQLITE_DB}" "INSERT INTO aliases VALUES ('${ALIAS_NAME}', '${ALIAS_DIR}');"
      echo "Added alias name '${ALIAS_NAME}' for path '${ALIAS_DIR}'"
      exit
      ;;
    *)
      ;;
  esac
}

# -----------------------------------------------------------------------------
# Entry point 
# -----------------------------------------------------------------------------

JUMP_CONFIG_DIR="$HOME/.config/jump"
SQLITE_DB="$JUMP_CONFIG_DIR/jump.db"

# -----------------------------------------------------------------------------
# check that JUMP_CONFIG_DIR exists



if [[ ! -d $JUMP_CONFIG_DIR ]]; then
  echo "Create '$JUMP_CONFIG_DIR' [y/N]"
  read -r confirmation
  if [[ "$confirmation" = "y" ]]; then
    mkdir -p "$JUMP_CONFIG_DIR"
    sqlite3 -line "${SQLITE_DB}" "CREATE TABLE aliases(name TEXT NOT NULL PRIMARY KEY, path TEXT NOT NULL);"
    echo "$j_command_str"
    exit
  else
    exit
  fi
fi

# -----------------------------------------------------------------------------

if [[ "${#}" -eq 0 ]]; then
  # input has length 0
  # this indiecates that it is a `jump` command.
  # we are friendly and list all stored alias/path pairs
  sqlite3 -column "${SQLITE_DB}" "SELECT * FROM aliases;"
elif [ "${#}" -eq 1 ] && [[ "${1}" != "-"* ]]; then
  # input has length 1 and is not a string prefixed with a '-'
  # this indiecates that it is a `jump <alias>` command
    DIR=$(sqlite3 -list "${SQLITE_DB}" "SELECT path FROM aliases WHERE name='${1}';")
    if [ -n "${DIR}" ]
    then
      echo "${DIR}"
      exit
    else
      exit
    fi
else
  # input is >= 1 and the first argument is a 'flag'
    jump-options "${@}"
fi

